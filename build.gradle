import me.modmuss50.mpp.ReleaseType
import net.fabricmc.loom.task.RemapJarTask

import java.util.regex.Matcher

plugins {
	id 'me.modmuss50.mod-publish-plugin' version '0.4.2'
	id 'fabric-loom' version '1.4.1'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
}

dependencies {
	// To change the versions see the gradle.properties file.
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

tasks.withType(ProcessResources).configureEach {
	String start = version_start, end = version_end
	def pattern = ~"(?:Snapshot )?(\\d+)w0?(0|[1-9]\\d*)([a-z])"
	def matcher_start = pattern.matcher(start)
	def matcher_end = pattern.matcher(end)
	String temp
	if ((temp = snapshotToRelease(matcher_start)) != null)
		start = temp
	if ((temp = snapshotToRelease(matcher_end)) != null)
		end = temp

	String version_range = ">=$start <=$end"
	inputs.property "version", project.version
	inputs.property "range", version_range

	filesMatching("fabric.mod.json") {
		expand "version": project.version, "range": version_range
	}
}

tasks.withType(JavaCompile).configureEach {
	//noinspection GroovyAssignabilityCheck,GroovyAccessibility
	it.options.release = 17
}

java {
	withSourcesJar()
	withJavadocJar()
}

[jar, sourcesJar].each {
	it.from("LICENSE") {
		rename { "${it}_${archives_base_name}"}
	}
}

remapSourcesJar {
	archiveClassifier.set(archiveClassifier.get().concat("-remapped"))
}

javadoc {
	javadoc.options.quiet()
	exclude 'net/anawesomguy/wsmlmb/mixin'
}

// testmod stuff (taken from fapi)
tasks.register('testmodJar', Jar) {
	from sourceSets.test.output
	//noinspection GrDeprecatedAPIUsage
	destinationDirectory = new File(project.buildDir, "devlibs")
	archiveClassifier = "testmod"
}

tasks.register('remapTestmodJar', RemapJarTask) {
	Jar testmodJar = tasks.named('testmodJar').get() as Jar
	dependsOn testmodJar
	input = testmodJar.archiveFile
	archiveClassifier = "testmod"
	addNestedDependencies = false
}

RemapJarTask remapTestmodJar = tasks.named('remapTestmodJar').get() as RemapJarTask
tasks.named('build').get().dependsOn(remapTestmodJar)

publishMods {
	def version = mod_version.split('\\+')[0]
	type = release_type.toLowerCase() == 'release' ? STABLE : ReleaseType.of(release_type)
	displayName = "[${version_start}-${version_end}] WSMLMB $version"
	file = remapJar.archiveFile

	modLoaders.add('fabric')
	modLoaders.add('quilt')

	changelog = file('changelog.md').text
	additionalFiles.from(sourcesJar.archiveFile, remapSourcesJar.archiveFile, javadocJar.archiveFile, remapTestmodJar.archiveFile)

	modrinth {
		projectId = 'gIPBnBdZ'
		accessToken = providers.environmentVariable('$MODRINTH_TOKEN')
		announcementTitle = "Modrinth Download"
		displayName = "WSMLMB $version"

		minecraftVersionRange {
			start = version_start
			end = version_end
			includeSnapshots = true
		}

		requires {
			slug = 'fabric-api'
		}
	}

	curseforge {
		projectSlug = 'wsmlmb'
		projectId = '932603'
		accessToken = providers.environmentVariable('$CURSEFORGE_TOKEN')
		announcementTitle = "Curseforge Download"

		minecraftVersionRange {
			start = version_start
			end = version_end
		}

		requires {
			slug = 'fabric-api'
		}
	}

	github {
		accessToken = providers.environmentVariable('$GITHUB_TOKEN')
		repository = 'AnAwesomGuy/wsmlmb'
		announcementTitle = "Github Download"
		commitish = github_branch
		tagName = release_type + '/' + version
	}
}

loom {
	// accesswidener
	accessWidenerPath = file "src/main/resources/wsmlmb.accesswidener"

	// testmod runs
	runs {
		testmodClient {
			client()
			ideConfigGenerated project.rootProject == project
			name = "Testmod Client"
			source sourceSets.test
		}

		testmodServer {
			server()
			ideConfigGenerated project.rootProject == project
			name = "Testmod Server"
			source sourceSets.test
		}
	}
}

private static def snapshotToRelease(Matcher matcher) {
	if (matcher.matches()) {
		String release

		int year = Integer.parseInt(matcher.group(1))
		int week = Integer.parseInt(matcher.group(2))

		if (year >= 23 && week >= 40) {
			release = "1.20.3"
		} else if (year == 23 && week >= 31 && week <= 35) {
			release = "1.20.2"
		} else if (year == 23 && week >= 12 && week <= 18) {
			release = "1.20"
		} else if (year == 23 && week <= 7) {
			release = "1.19.4"
		} else if (year == 22 && week >= 42) {
			release = "1.19.3"
		} else if (year == 22 && week == 24) {
			release = "1.19.1"
		} else if (year == 22 && week >= 11 && week <= 19) {
			release = "1.19"
		} else if (year == 22 && week >= 3 && week <= 7) {
			release = "1.18.2"
		} else if (year == 21 && week >= 37 && week <= 44) {
			release = "1.18"
		} else if (year == 20 && week >= 45 || year == 21 && week <= 20) {
			release = "1.17"
		} else if (year == 20 && week >= 27 && week <= 30) {
			release = "1.16.2"
		} else if (year == 20 && week >= 6 && week <= 22) {
			release = "1.16"
		} else if (year == 19 && week >= 34) {
			release = "1.15"
		} else if (year == 18 && week >= 43 || year == 19 && week <= 14) {
			release = "1.14"
		} else if (year == 18 && week >= 30 && week <= 33) {
			release = "1.13.1"
		} else if (year == 17 && week >= 43 || year == 18 && week <= 22) {
			release = "1.13"
		} else if (year == 17 && week == 31) {
			release = "1.12.1"
		} else if (year == 17 && week >= 6 && week <= 18) {
			release = "1.12"
		} else if (year == 16 && week == 50) {
			release = "1.11.1"
		} else if (year == 16 && week >= 32 && week <= 44) {
			release = "1.11"
		} else if (year == 16 && week >= 20 && week <= 21) {
			release = "1.10"
		} else if (year == 16 && week >= 14 && week <= 15) {
			release = "1.9.3"
		} else if (year == 15 && week >= 31 || year == 16 && week <= 7) {
			release = "1.9"
		} else if (year == 14 && week >= 2 && week <= 34) {
			release = "1.8"
		} else if (year == 13 && week >= 47 && week <= 49) {
			release = "1.7.4"
		} else if (year == 13 && week >= 36 && week <= 43) {
			release = "1.7.2"
		} else if (year == 13 && week >= 16 && week <= 26) {
			release = "1.6"
		} else if (year == 13 && week >= 11 && week <= 12) {
			release = "1.5.1"
		} else if (year == 13 && week >= 1 && week <= 10) {
			release = "1.5"
		} else if (year == 12 && week >= 49 && week <= 50) {
			release = "1.4.6"
		} else if (year == 12 && week >= 32 && week <= 42) {
			release = "1.4.2"
		} else if (year == 12 && week >= 15 && week <= 30) {
			release = "1.3.1"
		} else if (year == 12 && week >= 3 && week <= 8) {
			release = "1.2.1"
		} else if (year == 11 && week >= 47 || year == 12 && week <= 1) {
			release = "1.1"
		} else return null

		return String.format("%s-alpha.%s.%s.%s", release, matcher.group(1), matcher.group(2), matcher.group(3))
	}
	return null
}